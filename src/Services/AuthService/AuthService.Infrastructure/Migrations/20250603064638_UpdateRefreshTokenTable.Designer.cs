// <auto-generated />
using System;
using AuthService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthService.Infrastructure.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20250603064638_UpdateRefreshTokenTable")]
    partial class UpdateRefreshTokenTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthService.Domain.Entities.FunctionAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionScope")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlPattern")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CodeName")
                        .IsUnique();

                    b.ToTable("FunctionActions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000001"),
                            ActionType = "Create",
                            CodeName = "CREATE_ORDER",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "POST",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "OrderService",
                            Name = "Create Order",
                            UrlPattern = "/api/orders"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000002"),
                            ActionType = "View",
                            CodeName = "VIEW_ORDER_DETAILS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "GET",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "OrderService",
                            Name = "View Order Details",
                            UrlPattern = "/api/orders/{id}"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000003"),
                            ActionType = "Update",
                            CodeName = "UPDATE_ORDER_STATUS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "PUT",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "OrderService",
                            Name = "Update Order Status",
                            UrlPattern = "/api/orders/{id}/status"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000004"),
                            ActionType = "Delete",
                            CodeName = "CANCEL_ORDER",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "DELETE",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "OrderService",
                            Name = "Cancel Order",
                            UrlPattern = "/api/orders/{id}"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000005"),
                            ActionType = "Update",
                            CodeName = "RATE_ORDER",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "POST",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "OrderService",
                            Name = "Rate Order",
                            UrlPattern = "/api/orders/{id}/rate"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000006"),
                            ActionType = "Create",
                            CodeName = "CREATE_MENU",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "POST",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "MenuService",
                            Name = "Create Menu",
                            UrlPattern = "/api/menus"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000007"),
                            ActionType = "View",
                            CodeName = "VIEW_MENU",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "GET",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "MenuService",
                            Name = "View Menu",
                            UrlPattern = "/api/menus"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000008"),
                            ActionType = "Update",
                            CodeName = "UPDATE_MENU",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "PUT",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "MenuService",
                            Name = "Update Menu",
                            UrlPattern = "/api/menus/{id}"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000009"),
                            ActionType = "Delete",
                            CodeName = "DELETE_MENU",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "DELETE",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "MenuService",
                            Name = "Delete Menu",
                            UrlPattern = "/api/menus/{id}"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000010"),
                            ActionType = "Update",
                            CodeName = "ACCEPT_DELIVERY",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "POST",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "DeliveryPartnerService",
                            Name = "Accept Delivery",
                            UrlPattern = "/api/deliveries/{id}/accept"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000011"),
                            ActionType = "Update",
                            CodeName = "UPDATE_DELIVERY_STATUS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "PUT",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "DeliveryPartnerService",
                            Name = "Update Delivery Status",
                            UrlPattern = "/api/deliveries/{id}/status"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000012"),
                            ActionType = "Update",
                            CodeName = "REASSIGN_DELIVERY",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "PUT",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "DeliveryPartnerService",
                            Name = "Reassign Delivery",
                            UrlPattern = "/api/deliveries/{id}/reassign"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000013"),
                            ActionType = "Manage",
                            CodeName = "MANAGE_ROLES",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "POST",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "AuthService",
                            Name = "Manage Roles",
                            UrlPattern = "/api/roles"
                        },
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000014"),
                            ActionType = "Manage",
                            CodeName = "MANAGE_USERS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionScope = "API",
                            HttpMethod = "POST",
                            IsActive = true,
                            ModifiedBy = "",
                            Module = "AuthService",
                            Name = "Manage Users",
                            UrlPattern = "/api/users"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.FunctionModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeName")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("FunctionModules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000001"),
                            CodeName = "ORDER_MANAGEMENT",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 0,
                            ModifiedBy = "",
                            ModuleType = "M",
                            Name = "Order Management"
                        },
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000002"),
                            CodeName = "ORDER_OPERATIONS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 1,
                            ModifiedBy = "",
                            ModuleType = "G",
                            Name = "Order Operations",
                            ParentId = new Guid("80000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000003"),
                            CodeName = "MENU_MANAGEMENT",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 0,
                            ModifiedBy = "",
                            ModuleType = "M",
                            Name = "Menu Management"
                        },
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000004"),
                            CodeName = "MENU_OPERATIONS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 1,
                            ModifiedBy = "",
                            ModuleType = "G",
                            Name = "Menu Operations",
                            ParentId = new Guid("80000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000005"),
                            CodeName = "DELIVERY_MANAGEMENT",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 0,
                            ModifiedBy = "",
                            ModuleType = "M",
                            Name = "Delivery Management"
                        },
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000006"),
                            CodeName = "DELIVERY_OPERATIONS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 1,
                            ModifiedBy = "",
                            ModuleType = "G",
                            Name = "Delivery Operations",
                            ParentId = new Guid("80000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("80000000-0000-0000-0000-000000000007"),
                            CodeName = "SYSTEM_SETTINGS",
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Level = 0,
                            ModifiedBy = "",
                            ModuleType = "S",
                            Name = "System Settings"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Administrator")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            Administrator = false,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            Name = "Customer"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000002"),
                            Administrator = false,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            Name = "Driver"
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000003"),
                            Administrator = false,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            Name = "Restaurant"
                        },
                        new
                        {
                            Id = new Guid("50000000-0000-0000-0000-000000000005"),
                            Administrator = true,
                            CreatedBy = "system",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FunctionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FunctionID");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000001"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000001"),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000002"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000002"),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000003"),
                            Allowed = false,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000003"),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000004"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000004"),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000005"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000005"),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000006"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000007"),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000007"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000002"),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000008"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000003"),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000009"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000004"),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000010"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000010"),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000011"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000011"),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000012"),
                            Allowed = false,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000012"),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000013"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000002"),
                            ModifiedBy = "",
                            RoleId = new Guid("30000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000014"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000003"),
                            ModifiedBy = "",
                            RoleId = new Guid("30000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000015"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000006"),
                            ModifiedBy = "",
                            RoleId = new Guid("30000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000016"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000007"),
                            ModifiedBy = "",
                            RoleId = new Guid("30000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000017"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000008"),
                            ModifiedBy = "",
                            RoleId = new Guid("30000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000018"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000009"),
                            ModifiedBy = "",
                            RoleId = new Guid("30000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000019"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000001"),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000020"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000002"),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000021"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000003"),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000022"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000004"),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000023"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000013"),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("70000000-0000-0000-0000-000000000024"),
                            Allowed = true,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            FunctionID = new Guid("90000000-0000-0000-0000-000000000014"),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005")
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedPWAttempt")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "admin",
                            Email = "john_doe@example.com",
                            FailedPWAttempt = 0,
                            IsLocking = false,
                            IsOnline = false,
                            ModifiedBy = "",
                            PasswordHash = "$2a$11$hashedpassword",
                            RefreshToken = "",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "admin",
                            Email = "driver_1@example.com",
                            FailedPWAttempt = 0,
                            IsLocking = false,
                            IsOnline = false,
                            ModifiedBy = "",
                            PasswordHash = "$2a$11$hashedpassword",
                            RefreshToken = "",
                            Username = "driver_1"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CreatedAt = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "system",
                            Email = "admin@example.com",
                            FailedPWAttempt = 0,
                            IsLocking = false,
                            IsOnline = false,
                            ModifiedBy = "",
                            PasswordHash = "$2a$11$hashedpassword",
                            RefreshToken = "",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60000000-0000-0000-0000-000000000001"),
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartDate = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("60000000-0000-0000-0000-000000000002"),
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            RoleId = new Guid("20000000-0000-0000-0000-000000000002"),
                            StartDate = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("60000000-0000-0000-0000-000000000003"),
                            CreatedBy = "system",
                            CreatedOn = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "",
                            RoleId = new Guid("50000000-0000-0000-0000-000000000005"),
                            StartDate = new DateTime(2025, 5, 28, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("55555555-5555-5555-5555-555555555555")
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.FunctionModule", b =>
                {
                    b.HasOne("AuthService.Domain.Entities.FunctionModule", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("AuthService.Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("AuthService.Domain.Entities.FunctionAction", "FunctionAction")
                        .WithMany("RolePermissions")
                        .HasForeignKey("FunctionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionAction");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("AuthService.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.FunctionAction", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.FunctionModule", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
